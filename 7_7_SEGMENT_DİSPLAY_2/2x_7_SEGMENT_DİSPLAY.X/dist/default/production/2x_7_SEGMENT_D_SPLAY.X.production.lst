

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 16 20:32:04 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x4E,2
    11  0000                     
    12                           ; Version 2.36
    13                           ; Generated 28/01/2022 GMT
    14                           ; 
    15                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F84A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0088                     	;# 
    62  0089                     	;# 
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0088                     	;# 
    78  0089                     	;# 
    79                           
    80                           	psect	idataBANK0
    81  03A3                     __pidataBANK0:
    82                           
    83                           ;initializer for _rakamlar
    84  03A3  343F               	retlw	63
    85  03A4  3406               	retlw	6
    86  03A5  345B               	retlw	91
    87  03A6  344F               	retlw	79
    88  03A7  3466               	retlw	102
    89  03A8  346D               	retlw	109
    90  03A9  347C               	retlw	124
    91  03AA  3407               	retlw	7
    92  03AB  347F               	retlw	127
    93  03AC  346F               	retlw	111
    94  0006                     _PORTB	set	6
    95  0005                     _PORTA	set	5
    96  0029                     _RA1	set	41
    97  0028                     _RA0	set	40
    98  0086                     _TRISB	set	134
    99  0085                     _TRISA	set	133
   100                           
   101                           	psect	cinit
   102  03EA                     start_initialization:	
   103                           ; #config settings
   104                           
   105  03EA                     __initialization:
   106                           
   107                           ; Initialize objects allocated to BANK0
   108  03EA  23A3               	fcall	__pidataBANK0	;fetch initializer
   109  03EB  008C               	movwf	__pdataBANK0& (0+127)
   110  03EC  23A4               	fcall	__pidataBANK0+1	;fetch initializer
   111  03ED  008D               	movwf	(__pdataBANK0+1)& (0+127)
   112  03EE  23A5               	fcall	__pidataBANK0+2	;fetch initializer
   113  03EF  008E               	movwf	(__pdataBANK0+2)& (0+127)
   114  03F0  23A6               	fcall	__pidataBANK0+3	;fetch initializer
   115  03F1  008F               	movwf	(__pdataBANK0+3)& (0+127)
   116  03F2  23A7               	fcall	__pidataBANK0+4	;fetch initializer
   117  03F3  0090               	movwf	(__pdataBANK0+4)& (0+127)
   118  03F4  23A8               	fcall	__pidataBANK0+5	;fetch initializer
   119  03F5  0091               	movwf	(__pdataBANK0+5)& (0+127)
   120  03F6  23A9               	fcall	__pidataBANK0+6	;fetch initializer
   121  03F7  0092               	movwf	(__pdataBANK0+6)& (0+127)
   122  03F8  23AA               	fcall	__pidataBANK0+7	;fetch initializer
   123  03F9  0093               	movwf	(__pdataBANK0+7)& (0+127)
   124  03FA  23AB               	fcall	__pidataBANK0+8	;fetch initializer
   125  03FB  0094               	movwf	(__pdataBANK0+8)& (0+127)
   126  03FC  23AC               	fcall	__pidataBANK0+9	;fetch initializer
   127  03FD  0095               	movwf	(__pdataBANK0+9)& (0+127)
   128  03FE                     end_of_initialization:	
   129                           ;End of C runtime variable initialization code
   130                           
   131  03FE                     __end_of__initialization:
   132  03FE  0183               	clrf	3
   133  03FF  2BAD               	ljmp	_main	;jump to C main() function
   134                           
   135                           	psect	dataBANK0
   136  000C                     __pdataBANK0:
   137  000C                     _rakamlar:
   138  000C                     	ds	10
   139                           
   140                           	psect	cstackBANK0
   141  0016                     __pcstackBANK0:
   142  0016                     ?_main:
   143  0016                     ??_main:	
   144                           ; 1 bytes @ 0x0
   145                           
   146                           
   147                           ; 1 bytes @ 0x0
   148  0016                     	ds	2
   149  0018                     main@i:
   150                           
   151                           ; 1 bytes @ 0x2
   152  0018                     	ds	1
   153  0019                     main@j:
   154                           
   155                           ; 1 bytes @ 0x3
   156  0019                     	ds	1
   157                           
   158                           	psect	maintext
   159  03AD                     __pmaintext:	
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 19 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;  j               1    3[BANK0 ] unsigned char 
   170 ;;  i               1    2[BANK0 ] unsigned char 
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   175 ;; Tracked objects:
   176 ;;		On entry : B00/0
   177 ;;		On exit  : 100/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMMON   BANK0
   180 ;;      Params:         0       0
   181 ;;      Locals:         0       2
   182 ;;      Temps:          0       2
   183 ;;      Totals:         0       4
   184 ;;Total ram usage:        4 bytes
   185 ;; This function calls:
   186 ;;		Nothing
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192  03AD                     _main:	
   193                           ;psect for function _main
   194                           
   195                           
   196                           ;main.c: 20: TRISA=0x00;
   197                           
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   200  03AD  1683               	bsf	3,5	;RP0=1, select bank1
   201  03AE  0185               	clrf	5	;volatile
   202                           
   203                           ;main.c: 21: TRISB=0x00;
   204  03AF  0186               	clrf	6	;volatile
   205                           
   206                           ;main.c: 22: PORTA=0;
   207  03B0  1283               	bcf	3,5	;RP0=0, select bank0
   208  03B1  0185               	clrf	5	;volatile
   209                           
   210                           ;main.c: 23: PORTB=0;
   211  03B2  0186               	clrf	6	;volatile
   212  03B3                     l21:	
   213                           ;main.c: 25: while(1){
   214                           
   215                           
   216                           ;main.c: 26: for(char i=0;i<=9;i++){
   217  03B3  0198               	clrf	main@i
   218  03B4                     l595:
   219                           
   220                           ;main.c: 27: for(char j=0;j<=9;j++){
   221  03B4  0199               	clrf	main@j
   222  03B5                     l24:
   223                           
   224                           ;main.c: 28: RA0=0;
   225  03B5  1005               	bcf	5,0	;volatile
   226                           
   227                           ;main.c: 29: RA1=1;
   228  03B6  1485               	bsf	5,1	;volatile
   229                           
   230                           ;main.c: 30: PORTB=rakamlar[j];
   231  03B7  0819               	movf	main@j,w
   232  03B8  3E0C               	addlw	(low (_rakamlar| 0))& (0+255)
   233  03B9  0084               	movwf	4
   234  03BA  1383               	bcf	3,7	;select IRP bank0
   235  03BB  0800               	movf	0,w
   236  03BC  0086               	movwf	6	;volatile
   237                           
   238                           ;main.c: 31: _delay((unsigned long)((40)*(4000000/4000.0)));
   239  03BD  3034               	movlw	52
   240  03BE  0097               	movwf	??_main+1
   241  03BF  30F1               	movlw	241
   242  03C0  0096               	movwf	??_main
   243  03C1                     u57:
   244  03C1  0B96               	decfsz	??_main,f
   245  03C2  2BC1               	goto	u57
   246  03C3  0B97               	decfsz	??_main+1,f
   247  03C4  2BC1               	goto	u57
   248  03C5  2BC6               	nop2
   249                           
   250                           ;main.c: 32: RA0=1;
   251  03C6  1283               	bcf	3,5	;RP0=0, select bank0
   252  03C7  1405               	bsf	5,0	;volatile
   253                           
   254                           ;main.c: 33: RA1=0;
   255  03C8  1085               	bcf	5,1	;volatile
   256                           
   257                           ;main.c: 34: PORTB=rakamlar[i];
   258  03C9  0818               	movf	main@i,w
   259  03CA  3E0C               	addlw	(low (_rakamlar| 0))& (0+255)
   260  03CB  0084               	movwf	4
   261  03CC  1383               	bcf	3,7	;select IRP bank0
   262  03CD  0800               	movf	0,w
   263  03CE  0086               	movwf	6	;volatile
   264                           
   265                           ;main.c: 35: _delay((unsigned long)((40)*(4000000/4000.0)));
   266  03CF  3034               	movlw	52
   267  03D0  0097               	movwf	??_main+1
   268  03D1  30F1               	movlw	241
   269  03D2  0096               	movwf	??_main
   270  03D3                     u67:
   271  03D3  0B96               	decfsz	??_main,f
   272  03D4  2BD3               	goto	u67
   273  03D5  0B97               	decfsz	??_main+1,f
   274  03D6  2BD3               	goto	u67
   275  03D7  2BD8               	nop2
   276  03D8  3001               	movlw	1
   277  03D9  1283               	bcf	3,5	;RP0=0, select bank0
   278  03DA  0096               	movwf	??_main
   279  03DB  0816               	movf	??_main,w
   280  03DC  0799               	addwf	main@j,f
   281  03DD  300A               	movlw	10
   282  03DE  0219               	subwf	main@j,w
   283  03DF  1C03               	skipc
   284  03E0  2BB5               	goto	l24
   285  03E1  3001               	movlw	1
   286  03E2  0096               	movwf	??_main
   287  03E3  0816               	movf	??_main,w
   288  03E4  0798               	addwf	main@i,f
   289  03E5  300A               	movlw	10
   290  03E6  0218               	subwf	main@i,w
   291  03E7  1803               	btfsc	3,0
   292  03E8  2BB3               	goto	l21
   293  03E9  2BB4               	goto	l595
   294  03EA                     __end_of_main:
   295  004E                     btemp	set	78	;btemp
   296  004E                     wtemp0	set	78
   297                           
   298                           	psect	config
   299                           
   300                           ;Config register CONFIG @ 0x2007
   301                           ;	Oscillator Selection bits
   302                           ;	FOSC = XT, XT oscillator
   303                           ;	Watchdog Timer
   304                           ;	WDTE = OFF, WDT disabled
   305                           ;	Power-up Timer Enable bit
   306                           ;	PWRTE = OFF, Power-up Timer is disabled
   307                           ;	Code Protection bit
   308                           ;	CP = OFF, Code protection disabled
   309  2007                     	org	8199
   310  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      4      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      4       E       3       21.2%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       6        0.0%
ABS                  0      0       E       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 16 20:32:04 2022

                     l21 03B3                       l24 03B5                       u57 03C1  
                     u67 03D3                      l595 03B4                      _RA0 0028  
                    _RA1 0029                      fsr0 0004                      indf 0000  
                   _main 03AD                     btemp 004E                     start 0000  
                  ?_main 0016                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    main@i 0018  
                  main@j 0019                    status 0003                    wtemp0 004E  
        __initialization 03EA             __end_of_main 03EA                   ??_main 0016  
__end_of__initialization 03FE             __pidataBANK0 03A3               __pmaintext 03AD  
   end_of_initialization 03FE      start_initialization 03EA              __pdataBANK0 000C  
              ___latbits 0000            __pcstackBANK0 0016                 _rakamlar 000C  
