

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Nov 27 00:14:32 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x4E,2
    12  0000                     
    13                           ; Version 2.36
    14                           ; Generated 28/01/2022 GMT
    15                           ; 
    16                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F84A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0088                     	;# 
    79  0089                     	;# 
    80  0006                     _PORTB	set	6
    81  0001                     _TMR0	set	1
    82  000B                     _INTCON	set	11
    83  005A                     _T0IF	set	90
    84  0030                     _RB0	set	48
    85  0081                     _OPTION_REG	set	129
    86  0086                     _TRISB	set	134
    87                           
    88                           	psect	cinit
    89  000C                     start_initialization:	
    90                           ; #config settings
    91                           
    92  000C                     __initialization:
    93                           
    94                           ; Clear objects allocated to BANK0
    95  000C  1283               	bcf	3,5	;RP0=0, select bank0
    96  000D  018F               	clrf	__pbssBANK0& (0+127)
    97  000E  0190               	clrf	(__pbssBANK0+1)& (0+127)
    98  000F                     end_of_initialization:	
    99                           ;End of C runtime variable initialization code
   100                           
   101  000F                     __end_of__initialization:
   102  000F  0183               	clrf	3
   103  0010  2811               	ljmp	_main	;jump to C main() function
   104                           
   105                           	psect	bssBANK0
   106  000F                     __pbssBANK0:
   107  000F                     _counter:
   108  000F                     	ds	2
   109                           
   110                           	psect	cstackBANK0
   111  000C                     __pcstackBANK0:
   112  000C                     ?_TMR0_KESMESI:
   113  000C                     ??_TMR0_KESMESI:	
   114                           ; 1 bytes @ 0x0
   115                           
   116  000C                     ?_main:	
   117                           ; 1 bytes @ 0x0
   118                           
   119                           
   120                           ; 1 bytes @ 0x0
   121  000C                     	ds	2
   122  000E                     ??_main:
   123                           
   124                           ; 1 bytes @ 0x2
   125  000E                     	ds	1
   126                           
   127                           	psect	maintext
   128  0011                     __pmaintext:	
   129 ;;
   130 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   131 ;;
   132 ;; *************** function _main *****************
   133 ;; Defined at:
   134 ;;		line 31 in file "main.c"
   135 ;; Parameters:    Size  Location     Type
   136 ;;		None
   137 ;; Auto vars:     Size  Location     Type
   138 ;;		None
   139 ;; Return value:  Size  Location     Type
   140 ;;                  1    wreg      void 
   141 ;; Registers used:
   142 ;;		wreg, status,2, status,0
   143 ;; Tracked objects:
   144 ;;		On entry : B00/0
   145 ;;		On exit  : B00/0
   146 ;;		Unchanged: A00/0
   147 ;; Data sizes:     COMMON   BANK0
   148 ;;      Params:         0       0
   149 ;;      Locals:         0       0
   150 ;;      Temps:          0       1
   151 ;;      Totals:         0       1
   152 ;;Total ram usage:        1 bytes
   153 ;; Hardware stack levels required when called: 1
   154 ;; This function calls:
   155 ;;		Nothing
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161  0011                     _main:	
   162                           ;psect for function _main
   163                           
   164                           
   165                           ;main.c: 33: INTCON |=(1<<7);
   166                           
   167                           ;incstack = 0
   168                           ; Regs used in _main: [wreg+status,2+status,0]
   169  0011  178B               	bsf	11,7	;volatile
   170                           
   171                           ;main.c: 34: INTCON |=(1<<5);
   172  0012  168B               	bsf	11,5	;volatile
   173                           
   174                           ;main.c: 35: TRISB &=~(1<<0);
   175  0013  30FE               	movlw	254
   176  0014  008E               	movwf	??_main
   177  0015  080E               	movf	??_main,w
   178  0016  1683               	bsf	3,5	;RP0=1, select bank1
   179  0017  0586               	andwf	6,f	;volatile
   180                           
   181                           ;main.c: 36: OPTION_REG |=(7<<0);
   182  0018  3007               	movlw	7
   183  0019  1283               	bcf	3,5	;RP0=0, select bank0
   184  001A  008E               	movwf	??_main
   185  001B  080E               	movf	??_main,w
   186  001C  1683               	bsf	3,5	;RP0=1, select bank1
   187  001D  0481               	iorwf	1,f	;volatile
   188                           
   189                           ;main.c: 37: OPTION_REG &=~(1<<3);
   190  001E  30F7               	movlw	247
   191  001F  1283               	bcf	3,5	;RP0=0, select bank0
   192  0020  008E               	movwf	??_main
   193  0021  080E               	movf	??_main,w
   194  0022  1683               	bsf	3,5	;RP0=1, select bank1
   195  0023  0581               	andwf	1,f	;volatile
   196                           
   197                           ;main.c: 38: OPTION_REG &=~(1<<5);
   198  0024  30DF               	movlw	223
   199  0025  1283               	bcf	3,5	;RP0=0, select bank0
   200  0026  008E               	movwf	??_main
   201  0027  080E               	movf	??_main,w
   202  0028  1683               	bsf	3,5	;RP0=1, select bank1
   203  0029  0581               	andwf	1,f	;volatile
   204                           
   205                           ;main.c: 39: TMR0=217;
   206  002A  30D9               	movlw	217
   207  002B  1283               	bcf	3,5	;RP0=0, select bank0
   208  002C  0081               	movwf	1	;volatile
   209                           
   210                           ;main.c: 40: PORTB &=~(1<<0);
   211  002D  30FE               	movlw	254
   212  002E  008E               	movwf	??_main
   213  002F  080E               	movf	??_main,w
   214  0030  0586               	andwf	6,f	;volatile
   215  0031                     l28:	
   216                           ;main.c: 42: while(1){
   217                           
   218  0031  2831               	goto	l28
   219  0032                     __end_of_main:
   220                           
   221                           	psect	text1
   222  0032                     __ptext1:	
   223 ;; *************** function _TMR0_KESMESI *****************
   224 ;; Defined at:
   225 ;;		line 19 in file "main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 100/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0
   239 ;;      Params:         0       0
   240 ;;      Locals:         0       0
   241 ;;      Temps:          0       2
   242 ;;      Totals:         0       2
   243 ;;Total ram usage:        2 bytes
   244 ;; Hardware stack levels used: 1
   245 ;; This function calls:
   246 ;;		Nothing
   247 ;; This function is called by:
   248 ;;		Interrupt level 1
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252  0032                     _TMR0_KESMESI:	
   253                           ;psect for function _TMR0_KESMESI
   254                           
   255                           
   256                           ;main.c: 20: if(INTCON & 0x04){
   257  0032  1D0B               	btfss	11,2	;volatile
   258  0033  2846               	goto	i1l23
   259                           
   260                           ;main.c: 21: counter+=1;
   261  0034  3001               	movlw	1
   262  0035  078F               	addwf	_counter,f
   263  0036  1803               	skipnc
   264  0037  0A90               	incf	_counter+1,f
   265  0038  3000               	movlw	0
   266  0039  0790               	addwf	_counter+1,f
   267                           
   268                           ;main.c: 22: if(counter==50){
   269  003A  3032               	movlw	50
   270  003B  060F               	xorwf	_counter,w
   271  003C  0410               	iorwf	_counter+1,w
   272  003D  1D03               	btfss	3,2
   273  003E  2843               	goto	i1l594
   274                           
   275                           ;main.c: 23: counter=0;
   276  003F  018F               	clrf	_counter
   277  0040  0190               	clrf	_counter+1
   278                           
   279                           ;main.c: 24: RB0=RB0^1;
   280  0041  3001               	movlw	1
   281  0042  0686               	xorwf	6,f
   282  0043                     i1l594:
   283                           
   284                           ;main.c: 25: };main.c: 26: TMR0=217;
   285  0043  30D9               	movlw	217
   286  0044  0081               	movwf	1	;volatile
   287                           
   288                           ;main.c: 27: T0IF=0;
   289  0045  110B               	bcf	11,2	;volatile
   290  0046                     i1l23:
   291  0046  080D               	movf	??_TMR0_KESMESI+1,w
   292  0047  008A               	movwf	10
   293  0048  0E0C               	swapf	??_TMR0_KESMESI,w
   294  0049  0083               	movwf	3
   295  004A  0ECE               	swapf	78,f
   296  004B  0E4E               	swapf	78,w
   297  004C  0009               	retfie
   298  004D                     __end_of_TMR0_KESMESI:
   299  004E                     btemp	set	78	;btemp
   300  004E                     wtemp0	set	78
   301                           
   302                           	psect	intentry
   303  0004                     __pintentry:	
   304                           ;incstack = 0
   305                           ; Regs used in _TMR0_KESMESI: [wreg+status,2+status,0]
   306                           
   307  0004                     interrupt_function:
   308  004E                     saved_w	set	btemp
   309  0004  00CE               	movwf	btemp
   310  0005  0E03               	swapf	3,w
   311  0006  1283               	bcf	3,5	;RP0=0, select bank0
   312  0007  008C               	movwf	??_TMR0_KESMESI
   313  0008  080A               	movf	10,w
   314  0009  008D               	movwf	??_TMR0_KESMESI+1
   315  000A  2832               	ljmp	_TMR0_KESMESI
   316                           
   317                           	psect	config
   318                           
   319                           ;Config register CONFIG @ 0x2007
   320                           ;	Oscillator Selection bits
   321                           ;	FOSC = XT, XT oscillator
   322                           ;	Watchdog Timer
   323                           ;	WDTE = OFF, WDT disabled
   324                           ;	Power-up Timer Enable bit
   325                           ;	PWRTE = OFF, Power-up Timer is disabled
   326                           ;	Code Protection bit
   327                           ;	CP = OFF, Code protection disabled
   328  2007                     	org	8199
   329  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      3       5

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _TMR0_KESMESI in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_KESMESI in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _TMR0_KESMESI                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _TMR0_KESMESI (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      3       5       3        7.6%
ABS                  0      0       5       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       5       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Nov 27 00:14:32 2022

                     l28 0031                      _RB0 0030                     _T0IF 005A  
                   i1l23 0046                     _TMR0 0001                     _main 0011  
                   btemp 004E                     start 000B                    ?_main 000C  
                  i1l594 0043                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 004E  
        __initialization 000C             __end_of_main 0032                   ??_main 000E  
                 _INTCON 000B                   saved_w 004E  __end_of__initialization 000F  
             __pbssBANK0 000F               __pmaintext 0011               __pintentry 0004  
          ?_TMR0_KESMESI 000C                  __ptext1 0032                  _counter 000F  
         ??_TMR0_KESMESI 000C     end_of_initialization 000F      start_initialization 000C  
   __end_of_TMR0_KESMESI 004D                ___latbits 0000            __pcstackBANK0 000C  
      interrupt_function 0004             _TMR0_KESMESI 0032                 intlevel1 0000  
             _OPTION_REG 0081  
