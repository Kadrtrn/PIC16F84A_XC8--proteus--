

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Nov 24 23:43:05 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x4E,2
    11  0000                     
    12                           ; Version 2.36
    13                           ; Generated 28/01/2022 GMT
    14                           ; 
    15                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F84A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0088                     	;# 
    62  0089                     	;# 
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0088                     	;# 
    78  0089                     	;# 
    79  0006                     _PORTB	set	6
    80  000B                     _INTCON	set	11
    81  0059                     _INTF	set	89
    82  0081                     _OPTION_REG	set	129
    83  0086                     _TRISB	set	134
    84                           
    85                           	psect	cinit
    86  000C                     start_initialization:	
    87                           ; #config settings
    88                           
    89  000C                     __initialization:
    90  000C                     end_of_initialization:	
    91                           ;End of C runtime variable initialization code
    92                           
    93  000C                     __end_of__initialization:
    94  000C  0183               	clrf	3
    95  000D  282C               	ljmp	_main	;jump to C main() function
    96                           
    97                           	psect	cstackBANK0
    98  000C                     __pcstackBANK0:
    99  000C                     ?_KESME:
   100  000C                     ??_KESME:	
   101                           ; 1 bytes @ 0x0
   102                           
   103  000C                     ?_main:	
   104                           ; 1 bytes @ 0x0
   105                           
   106                           
   107                           ; 1 bytes @ 0x0
   108  000C                     	ds	5
   109  0011                     ??_main:
   110                           
   111                           ; 1 bytes @ 0x5
   112  0011                     	ds	1
   113                           
   114                           	psect	maintext
   115  002C                     __pmaintext:	
   116 ;;
   117 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   118 ;;
   119 ;; *************** function _main *****************
   120 ;; Defined at:
   121 ;;		line 26 in file "newmain.c"
   122 ;; Parameters:    Size  Location     Type
   123 ;;		None
   124 ;; Auto vars:     Size  Location     Type
   125 ;;		None
   126 ;; Return value:  Size  Location     Type
   127 ;;                  1    wreg      void 
   128 ;; Registers used:
   129 ;;		wreg, status,2, status,0
   130 ;; Tracked objects:
   131 ;;		On entry : B00/0
   132 ;;		On exit  : B00/0
   133 ;;		Unchanged: A00/0
   134 ;; Data sizes:     COMMON   BANK0
   135 ;;      Params:         0       0
   136 ;;      Locals:         0       0
   137 ;;      Temps:          0       1
   138 ;;      Totals:         0       1
   139 ;;Total ram usage:        1 bytes
   140 ;; Hardware stack levels required when called: 1
   141 ;; This function calls:
   142 ;;		Nothing
   143 ;; This function is called by:
   144 ;;		Startup code after reset
   145 ;; This function uses a non-reentrant model
   146 ;;
   147                           
   148  002C                     _main:	
   149                           ;psect for function _main
   150                           
   151                           
   152                           ;newmain.c: 28: TRISB &= ~(1<<7);
   153                           
   154                           ;incstack = 0
   155                           ; Regs used in _main: [wreg+status,2+status,0]
   156  002C  307F               	movlw	127
   157  002D  0091               	movwf	??_main
   158  002E  0811               	movf	??_main,w
   159  002F  1683               	bsf	3,5	;RP0=1, select bank1
   160  0030  0586               	andwf	6,f	;volatile
   161                           
   162                           ;newmain.c: 29: INTCON |= (1<<4);
   163  0031  160B               	bsf	11,4	;volatile
   164                           
   165                           ;newmain.c: 30: INTCON |= (1<<7);
   166  0032  178B               	bsf	11,7	;volatile
   167                           
   168                           ;newmain.c: 31: OPTION_REG |= (1<<6);
   169  0033  1701               	bsf	1,6	;volatile
   170  0034                     l23:	
   171                           ;newmain.c: 32: while(1){
   172                           
   173                           
   174                           ;newmain.c: 33: PORTB &= ~(1<<7);
   175  0034  307F               	movlw	127
   176  0035  1283               	bcf	3,5	;RP0=0, select bank0
   177  0036  0091               	movwf	??_main
   178  0037  0811               	movf	??_main,w
   179  0038  0586               	andwf	6,f	;volatile
   180  0039  2834               	goto	l23
   181  003A                     __end_of_main:
   182                           
   183                           	psect	text1
   184  000E                     __ptext1:	
   185 ;; *************** function _KESME *****************
   186 ;; Defined at:
   187 ;;		line 12 in file "newmain.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, status,2, status,0
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 100/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMMON   BANK0
   201 ;;      Params:         0       0
   202 ;;      Locals:         0       0
   203 ;;      Temps:          0       5
   204 ;;      Totals:         0       5
   205 ;;Total ram usage:        5 bytes
   206 ;; Hardware stack levels used: 1
   207 ;; This function calls:
   208 ;;		Nothing
   209 ;; This function is called by:
   210 ;;		Interrupt level 1
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214  000E                     _KESME:	
   215                           ;psect for function _KESME
   216                           
   217                           
   218                           ;newmain.c: 13: INTCON &=~(1<<7);
   219  000E  307F               	movlw	127
   220  000F  008C               	movwf	??_KESME
   221  0010  080C               	movf	??_KESME,w
   222  0011  058B               	andwf	11,f	;volatile
   223                           
   224                           ;newmain.c: 15: if(INTF==1)
   225  0012  1C8B               	btfss	11,1	;volatile
   226  0013  2823               	goto	L1
   227                           
   228                           ;newmain.c: 16: {;newmain.c: 18: PORTB |= 1<<7;
   229  0014  1786               	bsf	6,7	;volatile
   230                           
   231                           ;newmain.c: 19: _delay((unsigned long)((1000)*(4000000/4000.0)));
   232  0015  3006               	movlw	6
   233  0016  008E               	movwf	??_KESME+2
   234  0017  3013               	movlw	19
   235  0018  008D               	movwf	??_KESME+1
   236  0019  30AD               	movlw	173
   237  001A  008C               	movwf	??_KESME
   238  001B                     u3_27:
   239  001B  0B8C               	decfsz	??_KESME,f
   240  001C  281B               	goto	u3_27
   241  001D  0B8D               	decfsz	??_KESME+1,f
   242  001E  281B               	goto	u3_27
   243  001F  0B8E               	decfsz	??_KESME+2,f
   244  0020  281B               	goto	u3_27
   245  0021  2822               	nop2
   246                           
   247                           ;newmain.c: 20: };newmain.c: 21: INTF=0;
   248  0022  108B               	bcf	11,1	;volatile
   249  0023                     L1:
   250                           
   251                           ;newmain.c: 22: INTCON |=1<<7;
   252  0023  178B               	bsf	11,7	;volatile
   253  0024  1283               	bcf	3,5	;RP0=0, select bank0
   254  0025  0810               	movf	??_KESME+4,w
   255  0026  008A               	movwf	10
   256  0027  0E0F               	swapf	??_KESME+3,w
   257  0028  0083               	movwf	3
   258  0029  0ECE               	swapf	78,f
   259  002A  0E4E               	swapf	78,w
   260  002B  0009               	retfie
   261  002C                     __end_of_KESME:
   262  004E                     btemp	set	78	;btemp
   263  004E                     wtemp0	set	78
   264                           
   265                           	psect	intentry
   266  0004                     __pintentry:	
   267                           ;incstack = 0
   268                           ; Regs used in _KESME: [wreg+status,2+status,0]
   269                           
   270  0004                     interrupt_function:
   271  004E                     saved_w	set	btemp
   272  0004  00CE               	movwf	btemp
   273  0005  0E03               	swapf	3,w
   274  0006  1283               	bcf	3,5	;RP0=0, select bank0
   275  0007  008F               	movwf	??_KESME+3
   276  0008  080A               	movf	10,w
   277  0009  0090               	movwf	??_KESME+4
   278  000A  280E               	ljmp	_KESME
   279                           
   280                           	psect	config
   281                           
   282                           ;Config register CONFIG @ 0x2007
   283                           ;	Oscillator Selection bits
   284                           ;	FOSC = EXTRC, RC oscillator
   285                           ;	Watchdog Timer
   286                           ;	WDTE = OFF, WDT disabled
   287                           ;	Power-up Timer Enable bit
   288                           ;	PWRTE = OFF, Power-up Timer is disabled
   289                           ;	Code Protection bit
   290                           ;	CP = OFF, Code protection disabled
   291  2007                     	org	8199
   292  2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      6       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _KESME in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _KESME in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _KESME                                                5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _KESME (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      6       6       3        9.1%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Nov 24 23:43:05 2022

                     l23 0034                     _INTF 0059                     u3_27 001B  
                   _main 002C                     btemp 004E                     start 000B  
                  ?_main 000C                    _KESME 000E                    _PORTB 0006  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 004E          __initialization 000C             __end_of_main 003A  
                 ??_main 0011                   ?_KESME 000C                   _INTCON 000B  
                 saved_w 004E  __end_of__initialization 000C            __end_of_KESME 002C  
                ??_KESME 000C               __pmaintext 002C               __pintentry 0004  
                __ptext1 000E     end_of_initialization 000C      start_initialization 000C  
              ___latbits 0000            __pcstackBANK0 000C        interrupt_function 0004  
               intlevel1 0000               _OPTION_REG 0081  
